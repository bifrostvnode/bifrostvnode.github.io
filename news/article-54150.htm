<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://bifrostvnode.github.io/news/article-54150.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MySQL系列复习（9）分组查询（group by、having）</title>
        <meta name="description" content="环境：mysql5.7.30，cmd命令中进⾏演⽰。 目录 1、分组查询语法 2、聚合函数 3、准备数据 4、单字段分组 5、多字段分组 6、分组前筛选数据 7、分组后筛选数据 8、 where和ha" />
        <link rel="icon" href="/assets/website/img/bifrostvnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Bifrostv Node机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://bifrostvnode.github.io/news/article-54150.htm" />
    <meta property="og:site_name" content="Bifrostv Node机场节点订阅官网" />
    <meta property="og:title" content="MySQL系列复习（9）分组查询（group by、having）" />
    <meta property="og:image" content="https://bifrostvnode.github.io/uploads/20240911/6d70741a39fc0c609c9b489ff73bff1e.webp" />
        <meta property="og:release_date" content="2025-02-10T07:37:48" />
    <meta property="og:updated_time" content="2025-02-10T07:37:48" />
        <meta property="og:description" content="环境：mysql5.7.30，cmd命令中进⾏演⽰。 目录 1、分组查询语法 2、聚合函数 3、准备数据 4、单字段分组 5、多字段分组 6、分组前筛选数据 7、分组后筛选数据 8、 where和ha" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="MySQL系列复习（9）分组查询（group by、having）">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">

    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/meanmenu.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/boxicons.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/magnific-popup.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/animate.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/style.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/responsive.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-EBSBDJ3LPE"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-EBSBDJ3LPE');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="loader">
        <div class="d-table">
            <div class="d-table-cell">
                <div class="spinner">
                    <div class="bounce1"></div>
                    <div class="bounce2"></div>
                    <div class="bounce3"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="navbar-area fixed-top">
        <div class="mobile-nav">
            <a href="/" class="logo">
                Bifrostv Node
            </a>
        </div>
        <div class="main-nav">
            <div class="container">
                <nav class="navbar navbar-expand-md navbar-light">
                                        <a class="navbar-brand" href="/">
                        <span>BifrosTV Node</span>
                    </a>
                                        <div class="collapse navbar-collapse mean-menu" id="navbarSupportedContent">
                        <ul class="navbar-nav ml-auto">
                                                        <li class="nav-item">
                                <a href="/" class="nav-link">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a href="/free-nodes/" class="nav-link">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a href="/paid-subscribe/" class="nav-link">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a href="/client.htm" class="nav-link">客户端</a>
                            </li>
                                                        <li class="nav-item">
                                <a href="/news/" class="nav-link">新闻资讯</a>
                            </li>
                                                    </ul>
                    </div>
                </nav>
            </div>
        </div>
    </div>
    <div class="page-title-area">
        <img src="/assets/website/img/bifrostvnode/footer-car.png" alt="Title">
        <div class="container">
            <div class="page-title-content">
                <h1>MySQL系列复习（9）分组查询（group by、having）</h1>
                <ul>
                    <li>
                        <a href="/">首页</a>
                    </li>
                    <li>
                        <i class='bx bx-chevron-right'></i>
                    </li>
                    <li>
                        <a href="/news/">新闻资讯</a>
                    </li>
                    <li>
                        <i class='bx bx-chevron-right'></i>
                    </li>
                    <li>正文</li>
                </ul>
            </div>
        </div>
    </div>
    <section class="process-area pt-100 pb-70">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>环境：mysql5.7.30，cmd命令中进⾏演⽰。</p> <p id="main-toc"><strong>目录</strong></p> <p id="1%E3%80%81%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2%E8%AF%AD%E6%B3%95-toc" style="margin-left:40px;"><a href="#1%E3%80%81%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2%E8%AF%AD%E6%B3%95" rel="nofollow">1、分组查询语法</a></p> <p id="2%E3%80%81%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0-toc" style="margin-left:40px;"><a href="#2%E3%80%81%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0" rel="nofollow">2、聚合函数</a></p> <p id="3%E3%80%81%E5%87%86%E5%A4%87%E6%95%B0%E6%8D%AE-toc" style="margin-left:40px;"><a href="#3%E3%80%81%E5%87%86%E5%A4%87%E6%95%B0%E6%8D%AE" rel="nofollow">3、准备数据</a></p> <p id="4%E3%80%81%E5%8D%95%E5%AD%97%E6%AE%B5%E5%88%86%E7%BB%84-toc" style="margin-left:40px;"><a href="#4%E3%80%81%E5%8D%95%E5%AD%97%E6%AE%B5%E5%88%86%E7%BB%84" rel="nofollow">4、单字段分组</a></p> <p id="5%E3%80%81%E5%A4%9A%E5%AD%97%E6%AE%B5%E5%88%86%E7%BB%84-toc" style="margin-left:40px;"><a href="#5%E3%80%81%E5%A4%9A%E5%AD%97%E6%AE%B5%E5%88%86%E7%BB%84" rel="nofollow">5、多字段分组</a></p> <p id="6%E3%80%81%E5%88%86%E7%BB%84%E5%89%8D%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE-toc" style="margin-left:40px;"><a href="#6%E3%80%81%E5%88%86%E7%BB%84%E5%89%8D%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE" rel="nofollow">6、分组前筛选数据</a></p> <p id="7%E3%80%81%E5%88%86%E7%BB%84%E5%90%8E%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE-toc" style="margin-left:40px;"><a href="#7%E3%80%81%E5%88%86%E7%BB%84%E5%90%8E%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE" rel="nofollow">7、分组后筛选数据</a></p> <p id="8%E3%80%81%20where%E5%92%8Chaving%E7%9A%84%E5%8C%BA%E5%88%AB-toc" style="margin-left:40px;"><a href="#8%E3%80%81%20where%E5%92%8Chaving%E7%9A%84%E5%8C%BA%E5%88%AB" rel="nofollow">8、 where和having的区别</a></p> <p id="9%E3%80%81%E5%88%86%E7%BB%84%E5%90%8E%E6%8E%92%E5%BA%8F-toc" style="margin-left:40px;"><a href="#9%E3%80%81%E5%88%86%E7%BB%84%E5%90%8E%E6%8E%92%E5%BA%8F" rel="nofollow">9、分组后排序</a></p> <p id="10%E3%80%81where%20%26%20group%20by%20%26%20having%20%26%20order%20by%20%26%20limit%20%E4%B8%80%E8%B5%B7%E5%8D%8F%E4%BD%9C-toc" style="margin-left:40px;"><a href="#10%E3%80%81where%20%26%20group%20by%20%26%20having%20%26%20order%20by%20%26%20limit%20%E4%B8%80%E8%B5%B7%E5%8D%8F%E4%BD%9C" rel="nofollow">10、where &amp; group by &amp; having &amp; order by &amp; limit 一起协作</a></p> <p id="11%E3%80%81mysql%E5%88%86%E7%BB%84%E4%B8%AD%E7%9A%84%E5%9D%91-toc" style="margin-left:40px;"><a href="#11%E3%80%81mysql%E5%88%86%E7%BB%84%E4%B8%AD%E7%9A%84%E5%9D%91" rel="nofollow">11、mysql分组中的坑</a></p> <p id="12%E3%80%81%E6%80%BB%E7%BB%93-toc" style="margin-left:40px;"><a href="#12%E3%80%81%E6%80%BB%E7%BB%93" rel="nofollow">12、总结</a></p> <hr id="hr-toc"/> <h2 id="1%E3%80%81%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2%E8%AF%AD%E6%B3%95">1、分组查询语法</h2> <p>语法：</p> <p><span style="color:#f33b45;">SELECT </span><span style="color:#86ca5e;">column,group_function,.....</span><span style="color:#f33b45;"> FROM </span><span style="color:#86ca5e;">table</span></p> <p><span style="color:#f33b45;">[WHERE </span><span style="color:#86ca5e;">condition</span><span style="color:#f33b45;">] </span></p> <p><span style="color:#f33b45;">GROUP BY </span><span style="color:#86ca5e;">group_by_expression</span></p> <p><span style="color:#f33b45;">[HAVING </span><span style="color:#86ca5e;">group_condition</span><span style="color:#f33b45;">];</span></p> <p>说明：</p> <ul> <li>graph_function：聚合函数；</li> <li>group_by_expression：分组表达式，多个之间用逗号隔开；</li> <li>group_condition：分支之后对数据进行过滤；</li> <li>分组之后，select后面只能有两种类型的列：1）出现在group&nbsp; by后的列；2）或者使用聚合函数的列。</li> </ul> <h2 id="2%E3%80%81%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0"> <br /> 2、聚合函数</h2> <table align="left" border="1" cellpadding="1" cellspacing="1" style="width:500px;"> <tbody> <tr> <td><strong>函数名称</strong></td> <td><strong>作用</strong></td> </tr> <tr> <td>max</td> <td>查询指定列的最大值</td> </tr> <tr> <td>min</td> <td>查询指定列的最小值</td> </tr> <tr> <td>count</td> <td>统计查询结果的行数</td> </tr> <tr> <td>sum</td> <td>求和，返回指定列的总和</td> </tr> <tr> <td>·avg</td> <td>求平均值，返回指定列数据的平均值</td> </tr> </tbody> </table> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>分组时，可以使用上面的聚合函数。</p> <h2 id="3%E3%80%81%E5%87%86%E5%A4%87%E6%95%B0%E6%8D%AE">3、准备数据</h2> <pre><code class="language-sql">drop table if exists t_order; -- 创建订单表 create table t_order( id int not null AUTO_INCREMENT COMMENT '订单id', user_id bigint not null comment '下单⼈id', user_name varchar(16) not null default '' comment '⽤户名', price decimal(10,2) not null default 0 comment '订单⾦额', the_year SMALLINT not null comment '订单创建年份', PRIMARY KEY (id) ) comment '订单表';  -- 插⼊数据 insert into t_order(user_id,user_name,price,the_year) values (1001,'myron Java',11.11,'2017'), (1001,'myron Java',22.22,'2018'), (1001,'myron Java',88.88,'2018'), (1002,'刘德华',33.33,'2018'), (1002,'刘德华',12.22,'2018'), (1002,'刘德华',16.66,'2018'), (1002,'刘德华',44.44,'2019'), (1003,'张学友',55.55,'2018'), (1003,'张学友',66.66,'2019');   mysql&gt; select * from t_order; +----+---------+------------+-------+----------+ | id | user_id | user_name  | price | the_year | +----+---------+------------+-------+----------+ |  1 |    1001 | myron Java | 11.11 |     2017 | |  2 |    1001 | myron Java | 22.22 |     2018 | |  3 |    1001 | myron Java | 88.88 |     2018 | |  4 |    1002 | 刘德华     | 33.33 |     2018 | |  5 |    1002 | 刘德华     | 12.22 |     2018 | |  6 |    1002 | 刘德华     | 16.66 |     2018 | |  7 |    1002 | 刘德华     | 44.44 |     2019 | |  8 |    1003 | 张学友     | 55.55 |     2018 | |  9 |    1003 | 张学友     | 66.66 |     2019 | +----+---------+------------+-------+----------+ 9 rows in set (0.00 sec)  mysql&gt;</code></pre> <h2 id="4%E3%80%81%E5%8D%95%E5%AD%97%E6%AE%B5%E5%88%86%E7%BB%84">4、单字段分组</h2> <p>需求：查询每个用户下单数量，输出：用户id、下单数量，如下：</p> <pre><code class="language-sql">mysql&gt;  SELECT             user_id 用户id, COUNT(id) 下单数量          FROM              t_order         GROUP BY user_id; +----------+--------------+ | 用户id   | 下单数量     | +----------+--------------+ |     1001 |            3 | |     1002 |            4 | |     1003 |            2 | +----------+--------------+ 3 rows in set (0.04 sec)  mysql&gt;</code></pre> <h2 id="5%E3%80%81%E5%A4%9A%E5%AD%97%E6%AE%B5%E5%88%86%E7%BB%84">5、多字段分组</h2> <p>需求：查询每个用户每年下单数量，输出字段：用户id，年份，下单数量，如下：</p> <pre><code class="language-sql">mysql&gt; SELECT &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_id 用户id, the_year 年份, COUNT(id) 下单数量 &nbsp;&nbsp;&nbsp;&nbsp;FROM &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t_order &nbsp;&nbsp;&nbsp;&nbsp;GROUP BY user_id , the_year; +----------+--------+--------------+ | 用户id   | 年份   | 下单数量     | +----------+--------+--------------+ |     1001 |   2017 |            1 | |     1001 |   2018 |            2 | |     1002 |   2018 |            3 | |     1002 |   2019 |            1 | |     1003 |   2018 |            1 | |     1003 |   2019 |            1 | +----------+--------+--------------+ 6 rows in set (0.00 sec)  mysql&gt;</code></pre> <h2 id="6%E3%80%81%E5%88%86%E7%BB%84%E5%89%8D%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE">6、分组前筛选数据</h2> <p>分组前对数据进行筛选，使用where关键字。</p> <p>需求：需要查询2018年每个用户下单数量，输出：用户id，下单数量，如下：</p> <pre><code class="language-sql">mysql&gt; SELECT         user_id 用户id, COUNT(id) 下单数量       FROM           t_order t       WHERE          t.the_year=2018       GROUP BY user_id; +----------+--------------+ | 用户id   | 下单数量     | +----------+--------------+ |     1001 |            2 | |     1002 |            3 | |     1003 |            1 | +----------+--------------+ 3 rows in set (0.00 sec)  mysql&gt;</code></pre> <h2 id="7%E3%80%81%E5%88%86%E7%BB%84%E5%90%8E%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE">7、分组后筛选数据</h2> <p>分组后对数据筛选，使用having关键字。</p> <p>需求：查询2018年订单数量大于1的用户，输出：用户id，下单数量，如下：</p> <p><strong>方式1：</strong></p> <pre><code class="language-sql">mysql&gt; SELECT          user_id 用户id, COUNT(id) 下单数量       FROM          t_order t       WHERE          t.the_year=2018       GROUP BY user_id       HAVING count(id)&gt;=2; +----------+--------------+ | 用户id   | 下单数量     | +----------+--------------+ |     1001 |            2 | |     1002 |            3 | +----------+--------------+ 2 rows in set (0.00 sec)</code></pre> <p><strong>方式2：</strong></p> <pre><code class="language-sql">mysql&gt; SELECT          user_id 用户id, count(id) 下单数量       FROM          t_order t       WHERE          t.the_year=2018       GROUP BY user_id       HAVING 下单数量&gt;=2; +----------+--------------+ | 用户id   | 下单数量     | +----------+--------------+ |     1001 |            2 | |     1002 |            3 | +----------+--------------+ 2 rows in set (0.00 sec)  mysql&gt;</code></pre> <h2 id="8%E3%80%81%20where%E5%92%8Chaving%E7%9A%84%E5%8C%BA%E5%88%AB">8、 where和having的区别</h2> <p><span style="color:#f33b45;">where是在分组（聚合）前对记录进行筛选， 而having是在分组结束后的结果里筛选，最后返回整个sql的查询结果。</span></p> <p>可以把having理解为两级查询，即含having的查询操作先获得不含having子句时的sql查询结果表，然后在这个结果表上使用having条件筛选出符合的记录，最后返回这些记录，因此，having后是可以跟聚合函数的，并且这个聚合函数不必与select后面的聚集函数相同。</p> <h2 id="9%E3%80%81%E5%88%86%E7%BB%84%E5%90%8E%E6%8E%92%E5%BA%8F">9、分组后排序</h2> <p>需求：获取每个用户最大金额，然后按照最大金额倒序，输出：用户id，最大金额，如下：</p> <pre><code class="language-sql">mysql&gt; SELECT          user_id 用户id, max(price) 最大金额        FROM          t_order t        GROUP BY  user_id        ORDER BY 最大金额 desc; +----------+--------------+ | 用户id   | 最大金额     | +----------+--------------+ |     1001 |        88.88 | |     1003 |        66.66 | |     1002 |        44.44 | +----------+--------------+ 3 rows in set (0.00 sec)  mysql&gt;</code></pre> <h2 id="10%E3%80%81where%20%26%20group%20by%20%26%20having%20%26%20order%20by%20%26%20limit%20%E4%B8%80%E8%B5%B7%E5%8D%8F%E4%BD%9C">10、where &amp; group by &amp; having &amp; order by &amp; limit 一起协作</h2> <p>where、group by、having、order by 、limit这些关键字一起使用时，先后顺序有明确的限制，语法如下：<br /><strong><span style="color:#f33b45;">select</span> 列<span style="color:#f33b45;"> from</span><br /> 表名<br /><span style="color:#f33b45;">where</span> [查询条件]<br /><span style="color:#f33b45;">group by</span> [分组表达式]<br /><span style="color:#f33b45;">having</span> [分组过滤条件]<br /><span style="color:#f33b45;">order by </span>[排序条件]<br /><span style="color:#f33b45;">limit </span>[offset,] count;</strong></p> <p>注意：写法上面必须按照上面的顺序来写。</p> <p>示例：</p> <p>需求：查询出2018年，下单数量大于等于2的，按照下单数量降序排序，最后只输出第1条记录，显示：用户id，下单数量，如下：</p> <pre><code class="language-sql">mysql&gt; select * from t_order; +----+---------+------------+-------+----------+ | id | user_id | user_name  | price | the_year | +----+---------+------------+-------+----------+ |  1 |    1001 | myron Java | 11.11 |     2017 | |  2 |    1001 | myron Java | 22.22 |     2018 | |  3 |    1001 | myron Java | 88.88 |     2018 | |  4 |    1002 | 刘德华     | 33.33 |     2018 | |  5 |    1002 | 刘德华     | 12.22 |     2018 | |  6 |    1002 | 刘德华     | 16.66 |     2018 | |  7 |    1002 | 刘德华     | 44.44 |     2019 | |  8 |    1003 | 张学友     | 55.55 |     2018 | |  9 |    1003 | 张学友     | 66.66 |     2019 | +----+---------+------------+-------+----------+ 9 rows in set (0.00 sec)  mysql&gt; SELECT          user_id 用户id, COUNT(id) 下单数量      FROM          t_order t      WHERE          t.the_year=2018      GROUP BY user_id      HAVING count(id)&gt;=2      ORDER BY 下单数量 DESC      LIMIT 1; +----------+--------------+ | 用户id   | 下单数量     | +----------+--------------+ |     1002 |            3 | +----------+--------------+ 1 row in set (0.00 sec)  mysql&gt;</code></pre> <h2 id="11%E3%80%81mysql%E5%88%86%E7%BB%84%E4%B8%AD%E7%9A%84%E5%9D%91">11、mysql分组中的坑</h2> <p>本文开头有介绍，分组中select后面的列只能是2种：</p> <ul> <li>1）出现在group by后面的列；</li> <li>2）使用聚合函数的列。</li> </ul> <p>Oracle、SqlServer、db2中也是按照这种规范来的。</p> <p>文中使用的是5.7版本，默认是按照这种规范来的。</p> <p>mysql早期的一些版本，没有上面这些要求，select后面可以跟任何合法的列。</p> <p><span style="color:#f33b45;">建议：在写分组查询的时候，最好按照标准的规范来写，select后面出现的列必须在group by中或者必须使用聚合函数</span></p> <h2 id="12%E3%80%81%E6%80%BB%E7%BB%93">12、总结</h2> <p>1）在写分组查询的时候，，最好按照标准的规范来写，select后出现的列必须在group by中或者必须使用聚合函数。</p> <p>2）select语法顺序：select、from、where、group by、having、order by、limit，顺序不能搞错了，否则报错。</p> <p></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-53608.htm">基于web的宠物领养系统需求分析书（基于web的宠物领养系统需求分析书）</a></p>
                                        <p>下一个：<a href="/news/article-54151.htm">免费宠物领养平台有哪些呢知乎文章（宠物领养网免费领养宠物的网站宠物领养中心）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-26-node-share.htm" title="11月26日→21.8M/S|2024年最新免费节点Bifrostv Node订阅链接地址">11月26日→21.8M/S|2024年最新免费节点Bifrostv Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-18-free-node-subscribe-links.htm" title="1月18日→18.9M/S|2025年最新免费节点Bifrostv Node订阅链接地址">1月18日→18.9M/S|2025年最新免费节点Bifrostv Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-14-free-subscribe-node.htm" title="12月14日→20.6M/S|2024年最新免费节点Bifrostv Node订阅链接地址">12月14日→20.6M/S|2024年最新免费节点Bifrostv Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-28920.htm" title="秋季动物防疫工作通知怎么写（秋季动物防疫工作要求）">秋季动物防疫工作通知怎么写（秋季动物防疫工作要求）</a></li>
                        <li class="py-2"><a href="/news/article-37521.htm" title="C/C++ 缓冲区问题、计时循环和基于范围的for循环">C/C++ 缓冲区问题、计时循环和基于范围的for循环</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-18-free-high-speed-nodes.htm" title="12月18日→22.3M/S|2024年最新免费节点Bifrostv Node订阅链接地址">12月18日→22.3M/S|2024年最新免费节点Bifrostv Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-27062.htm" title="动物打疫苗获得的免疫称为什么（动物注射疫苗）">动物打疫苗获得的免疫称为什么（动物注射疫苗）</a></li>
                        <li class="py-2"><a href="/news/article-32725.htm" title="Docker镜像构建之docker commit">Docker镜像构建之docker commit</a></li>
                        <li class="py-2"><a href="/news/article-27521.htm" title="clickhouse智能提示编辑器">clickhouse智能提示编辑器</a></li>
                        <li class="py-2"><a href="/news/article-26144.htm" title="长沙宠物领养中心在哪个位置（长沙宠物领养中心在哪个位置呀）">长沙宠物领养中心在哪个位置（长沙宠物领养中心在哪个位置呀）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer>
        <div class="container">
            <div class="copyright-area">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="copyright-item text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <a href="/">Bifrostv Node机场节点订阅官网</a> 版权所有
                            <br />
                            Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <script data-cfasync="false" src="/assets/website/js/frontend/bifrostvnode/email-decode.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/popper.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery.meanmenu.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery.mixitup.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery.ajaxchimp.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/form-validator.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/contact-form-script.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/wow.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>