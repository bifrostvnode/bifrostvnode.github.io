<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://bifrostvnode.github.io/news/article-52535.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JAVA锁  ——  ReentrantLock公平锁和非公平锁原理详解</title>
        <meta name="description" content="一、简介：  ReentrantLock的实现是基于其内部类FairSync(公平锁)和NonFairSync(非公平锁)实现的。 其可重入性是基于Thread.currentThread()实现的：" />
        <link rel="icon" href="/assets/website/img/bifrostvnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Bifrostv Node机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://bifrostvnode.github.io/news/article-52535.htm" />
    <meta property="og:site_name" content="Bifrostv Node机场节点订阅官网" />
    <meta property="og:title" content="JAVA锁  ——  ReentrantLock公平锁和非公平锁原理详解" />
    <meta property="og:image" content="https://bifrostvnode.github.io/uploads/20240911/9df8a0a206ced137317661c4c077a9b8.webp" />
        <meta property="og:release_date" content="2025-02-07T07:19:06" />
    <meta property="og:updated_time" content="2025-02-07T07:19:06" />
        <meta property="og:description" content="一、简介：  ReentrantLock的实现是基于其内部类FairSync(公平锁)和NonFairSync(非公平锁)实现的。 其可重入性是基于Thread.currentThread()实现的：" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="JAVA锁  ——  ReentrantLock公平锁和非公平锁原理详解">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">

    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/meanmenu.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/boxicons.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/magnific-popup.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/animate.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/style.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/responsive.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-EBSBDJ3LPE"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-EBSBDJ3LPE');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="loader">
        <div class="d-table">
            <div class="d-table-cell">
                <div class="spinner">
                    <div class="bounce1"></div>
                    <div class="bounce2"></div>
                    <div class="bounce3"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="navbar-area fixed-top">
        <div class="mobile-nav">
            <a href="/" class="logo">
                Bifrostv Node
            </a>
        </div>
        <div class="main-nav">
            <div class="container">
                <nav class="navbar navbar-expand-md navbar-light">
                                        <a class="navbar-brand" href="/">
                        <span>BifrosTV Node</span>
                    </a>
                                        <div class="collapse navbar-collapse mean-menu" id="navbarSupportedContent">
                        <ul class="navbar-nav ml-auto">
                                                        <li class="nav-item">
                                <a href="/" class="nav-link">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a href="/free-nodes/" class="nav-link">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a href="/paid-subscribe/" class="nav-link">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a href="/client.htm" class="nav-link">客户端</a>
                            </li>
                                                        <li class="nav-item">
                                <a href="/news/" class="nav-link">新闻资讯</a>
                            </li>
                                                    </ul>
                    </div>
                </nav>
            </div>
        </div>
    </div>
    <div class="page-title-area">
        <img src="/assets/website/img/bifrostvnode/footer-car.png" alt="Title">
        <div class="container">
            <div class="page-title-content">
                <h1>JAVA锁  ——  ReentrantLock公平锁和非公平锁原理详解</h1>
                <ul>
                    <li>
                        <a href="/">首页</a>
                    </li>
                    <li>
                        <i class='bx bx-chevron-right'></i>
                    </li>
                    <li>
                        <a href="/news/">新闻资讯</a>
                    </li>
                    <li>
                        <i class='bx bx-chevron-right'></i>
                    </li>
                    <li>正文</li>
                </ul>
            </div>
        </div>
    </div>
    <section class="process-area pt-100 pb-70">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <blockquote> <p><strong>一、简介：</strong></p> </blockquote> <p>ReentrantLock的实现是基于其内部类<span style="color:#f33b45;">FairSync</span>(公平锁)和<span style="color:#f33b45;">NonFairSync</span>(非公平锁)实现的。 其<span style="color:#f33b45;">可重入性</span>是基于<span style="color:#f33b45;">Thread.currentThread()</span>实现的：如果当前线程已经获得了执行序列中的锁， 那执行序列之后的所有方法都可以获得这个锁。</p> <h3>1、公平锁</h3> <ul> <li>公平和非公平锁的队列都基于<span style="color:#f33b45;">锁内部维护的一个双向链表</span>，表结点<span style="color:#f33b45;">Node的值</span>就是<span style="color:#f33b45;">每一个请求当前锁的线程</span>。<span style="color:#f33b45;">公平锁</span>则在于每次都是依次从<span style="color:#f33b45;">队首取值</span>。</li> <li>锁的实现方式是基于如下几点：<br /> &nbsp; &nbsp; &nbsp; &nbsp;1、表结点Node和状态state的volatile关键字。<br /> &nbsp; &nbsp; &nbsp; &nbsp; 2、sum.misc.Unsafe.compareAndSet的原子操作(见附录)</li> </ul> <h3>2、非公平锁</h3> <p>在等待锁的过程中， 如果有任意新的线程妄图获取锁，都是有很大的几率直接获取到锁的。</p> <ul> <li>ReentrantLock锁都不会使得线程中断，除非开发者自己设置了中断位。</li> <li>ReentrantLock获取锁里面有看似自旋的代码，但是它不是自旋锁。</li> <li>ReentrantLock<span style="color:#f33b45;">公平与非公平锁都是属于排它锁</span>。</li> </ul> <blockquote> <p><strong>二、ReentrantLock的可重入性分析</strong></p> </blockquote> <p>ReentrantLock重入性是基于Thread.currentThread()实现的: 如果当前线程已经获得了锁， 那该<span style="color:#f33b45;">线程下的所有方法都可以获得这个锁</span>。ReentrantLock的锁依赖只有 NonfairSync和FairSync两个实现类， 他们的锁获取方式大同小异。</p> <pre class="has"><code class="language-java">//可重入性的实现基于下面代码片段的 else if 语句 protected final boolean tryAcquire(int acquires) {     final Thread current = Thread.currentThread();     int c = getState();     if (c == 0) {         ...         // 尝试获取锁成功     }     else if (current == getExclusiveOwnerThread()) {         // 是当前线程，直接获取到锁。实现可重入性。         int nextc = c + acquires;         if (nextc &lt; 0)             throw new Error("Maximum lock count exceeded");         setState(nextc);         return true;     }     return false; }</code></pre> <p>此处有两个值需要关心：</p> <pre class="has"><code class="language-java">  	 //持有该锁的当前线程     private transient Thread exclusiveOwnerThread;      -----------------两个值不在同一个类----------------     /**      * 同步状态      * 0： 初始状态-无任何线程得到了锁      * &gt; 0: 被线程持有， 具体值表示被当前线程持有的执行次数      * 这个字段在解锁的时候也需要用到。      * 注意这个字段的修饰词: volatile      */     private volatile int state;</code></pre> <blockquote> <p><strong>三、ReentrantLock锁的实现分析</strong></p> </blockquote> <p><a name="t5" rel="nofollow"></a><a id="1_53" rel="nofollow"></a><strong>1、公平锁和非公平锁</strong></p> <p>ReentrantLock 的公平锁和非公平锁都委托了<span style="color:#f33b45;">AbstractQueuedSynchronizer#acquire</span>去请求获取。</p> <pre class="has"><code class="language-java">public final void acquire(int arg) {     if (!tryAcquire(arg) &amp;&amp;         acquireQueued(addWaiter(Node.EXCLUSIVE), arg))         selfInterrupt(); }</code></pre> <ul> <li><span style="color:#f33b45;">tryAcquire</span> 是一个抽象方法，是公平与非公平的实现原理所在。</li> <li>addWaiter 是<span style="color:#f33b45;">将当前线程结点加入等待队列之中</span>。公平锁在锁释放后会严格按照等到队列去取后续值，而非公平锁在对于新晋线程有很大优势。</li> <li><span style="color:#f33b45;">acquireQueued</span>在多次循环中尝试获取到锁或者将当前线程阻塞。</li> <li><span style="color:#f33b45;">selfInterrupt</span> 如果线程在阻塞期间发生了中断，调用<span style="color:#f33b45;">Thread.currentThread().interrupt()</span> 中断当前线程。</li> <li>ReentrantLock 对线程的阻塞是基于<span style="color:#f33b45;">LockSupport.park(this)</span>; (AbstractQueuedSynchronizer#parkAndCheckInterrupt，先决条件是当前节点有限次尝试获取锁失败。）</li> </ul> <p>公平锁和非公平锁在锁的获取上都使用到了<span style="color:#f33b45;">volatile 关键字修饰的state字段</span>， 这是保证<span style="color:#f33b45;">多线程环境下锁的获取与否的核心</span>。但是当并发情况下<span style="color:#f33b45;">多个线程都读取到 state == 0</span>时，则必须用到<span style="color:#f33b45;">CAS</span>技术，一门CPU的原子锁技术，可通过CPU对共享变量加锁的形式，实现数据变更的原子操作。volatile 和 CAS的结合是并发抢占的关键。</p> <h3><a name="t6" rel="nofollow"></a><a id="2FairSync_70" rel="nofollow"></a>2、公平锁FairSync</h3> <p>公平锁的实现机理在于每次有线程来抢占锁的时候，都会<span style="color:#f33b45;">检查一遍有没有等待队列</span>，如果有， 当前线程会执行如下步骤：</p> <pre class="has"><code class="language-java">if (!hasQueuedPredecessors() &amp;&amp; compareAndSetState(0, acquires)) {     setExclusiveOwnerThread(current);     return true; }</code></pre> <p>其中hasQueuedPredecessors是用于检查是否有等待队列的。</p> <pre class="has"><code class="language-java"> public final boolean hasQueuedPredecessors() {         Node t = tail; // Read fields in reverse initialization order         Node h = head;         Node s;         return h != t &amp;&amp;             ((s = h.next) == null || s.thread != Thread.currentThread());     }</code></pre> <h3>3、非公平锁NonfairSync</h3> <p>非公平锁在实现的时候多次强调随机抢占：</p> <pre class="has"><code class="language-java">if (c == 0) {     if (compareAndSetState(0, acquires)) {         setExclusiveOwnerThread(current);         return true;     } }</code></pre> <p>与公平锁的区别在于<span style="color:#f33b45;">新晋获取锁的进程会有多次机会去抢占锁</span>。如果被加入了等待队列后则跟公平锁没有区别。</p> <h3>4、ReentrantLock锁的释放</h3> <p>ReentrantLock锁的释放是逐级释放的，也就是说在可重入性场景中，必须要等到<span style="color:#f33b45;">场景内所有的加锁的方法都释放了锁， 当前线程持有的锁才会被释放。</span><br /> 释放的方式很简单， state字段减一即可：</p> <pre class="has"><code class="language-java">protected final boolean tryRelease(int releases) {     //  releases = 1     int c = getState() - releases;     if (Thread.currentThread() != getExclusiveOwnerThread())         throw new IllegalMonitorStateException();     boolean free = false;     if (c == 0) {         free = true;         setExclusiveOwnerThread(null);     }     setState(c);     return free; }</code></pre> <h3>5、ReentrantLock等待队列中元素的唤醒</h3> <p>当前<span style="color:#f33b45;">拥有锁的线程释放锁之后， 且非公平锁无线程抢占</span>，就开始线程唤醒的流程。<br /> 通过tryRelease释放锁成功，调用LockSupport.unpark(s.thread); 终止线程阻塞。</p> <pre class="has"><code class="language-java">private void unparkSuccessor(Node node) {     // 强行回写将被唤醒线程的状态     int ws = node.waitStatus;     if (ws &lt; 0)         compareAndSetWaitStatus(node, ws, 0);     Node s = node.next;     // s为h的下一个Node, 一般情况下都是非Null的     if (s == null || s.waitStatus &gt; 0) {         s = null;         // 否则按照FIFO原则寻找最先入队列的并且没有被Cancel的Node         for (Node t = tail; t != null &amp;&amp; t != node; t = t.prev)             if (t.waitStatus &lt;= 0)                 s = t;     }     // 再唤醒它     if (s != null)         LockSupport.unpark(s.thread); }</code></pre> <h3>6、ReentrantLock内存可见性分析</h3> <pre class="has"><code class="language-java">try {     lock.lock();     i ++; } finally {     lock.unlock(); }</code></pre> <p>可以发现哪怕在不使用 volatile关键字修饰元素i的时候， 这里的i 也是没有并发问题的。<br /><span style="color:#f33b45;">volatile 是Java语言的关键字， 功能是保证被修饰的元素(共享变量)</span>：</p> <ul> <li>任何<span style="color:#f33b45;">进程在读取</span>的时候，都会清空本进程里面持有的共享变量的值，<span style="color:#f33b45;">强制从主存里面获取</span>；</li> <li>任何<span style="color:#f33b45;">进程在写入完毕</span>的时候，都会强制<span style="color:#f33b45;">将共享变量的值写会主存</span>。</li> <li>volatile 会干预指令重排。</li> <li>volatile 实现了<span style="color:#f33b45;">JMM规范的 happen-before 原则</span>。</li> </ul> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/qq_29479041/article/details/84992673"  rel="nofollow">并发编程之ReentrantLock公平锁和非公平锁原理详解</a></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-52002.htm">动物医院游戏破解版无限金币爱心（动物医院游戏大全）</a></p>
                                        <p>下一个：<a href="/news/article-52536.htm">宠物狗衣服教程（宠物狗衣服教程视频）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-46907.htm" title="国内十大宠物粮食品牌排名榜最新图片（宠物粮销量排名）">国内十大宠物粮食品牌排名榜最新图片（宠物粮销量排名）</a></li>
                        <li class="py-2"><a href="/news/article-38503.htm" title="前端都应该要掌握的防抖和节流">前端都应该要掌握的防抖和节流</a></li>
                        <li class="py-2"><a href="/news/article-29388.htm" title="Node.js躬行记（17）——UmiJS版本升级">Node.js躬行记（17）——UmiJS版本升级</a></li>
                        <li class="py-2"><a href="/news/article-40974.htm" title="附近的仓鼠专卖店（附近哪有仓鼠宠物店）">附近的仓鼠专卖店（附近哪有仓鼠宠物店）</a></li>
                        <li class="py-2"><a href="/news/article-28920.htm" title="秋季动物防疫工作通知怎么写（秋季动物防疫工作要求）">秋季动物防疫工作通知怎么写（秋季动物防疫工作要求）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-28-node-share-links.htm" title="12月28日→20.2M/S|2024年最新免费节点Bifrostv Node订阅链接地址">12月28日→20.2M/S|2024年最新免费节点Bifrostv Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-2-free-subscribe-node.htm" title="12月2日→18.8M/S|2024年最新免费节点Bifrostv Node订阅链接地址">12月2日→18.8M/S|2024年最新免费节点Bifrostv Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-36190.htm" title="动物疫苗研发过程简述（动物疫苗研发过程简述）">动物疫苗研发过程简述（动物疫苗研发过程简述）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-6-free-high-speed-nodes.htm" title="2月6日→21.8M/S|2025年最新免费节点Bifrostv Node订阅链接地址">2月6日→21.8M/S|2025年最新免费节点Bifrostv Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-30341.htm" title="北京宠物连锁医院（北京宠物连锁医院排名前十）">北京宠物连锁医院（北京宠物连锁医院排名前十）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer>
        <div class="container">
            <div class="copyright-area">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="copyright-item text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <a href="/">Bifrostv Node机场节点订阅官网</a> 版权所有
                            <br />
                            Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <script data-cfasync="false" src="/assets/website/js/frontend/bifrostvnode/email-decode.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/popper.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery.meanmenu.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery.mixitup.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery.ajaxchimp.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/form-validator.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/contact-form-script.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/wow.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>