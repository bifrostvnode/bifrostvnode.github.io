<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://bifrostvnode.github.io/news/article-97836.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hyperledger Fabric 2.2 学习笔记：测试网络test-network</title>
        <meta name="description" content="写在前面 &nbsp; 最近被Hyperledger Fabric折磨，归根结底还是因为自己太菜了qwq。学习路漫漫，笔记不能少。下面的步骤均是基于已经成功搭建了Fabric2.2环境，并且拉取fab" />
        <link rel="icon" href="/assets/website/img/bifrostvnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Bifrostv Node机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://bifrostvnode.github.io/news/article-97836.htm" />
    <meta property="og:site_name" content="Bifrostv Node机场节点订阅官网" />
    <meta property="og:title" content="Hyperledger Fabric 2.2 学习笔记：测试网络test-network" />
    <meta property="og:image" content="https://bifrostvnode.github.io/uploads/20240911/6d70741a39fc0c609c9b489ff73bff1e.webp" />
        <meta property="og:release_date" content="2025-04-17T09:00:47" />
    <meta property="og:updated_time" content="2025-04-17T09:00:47" />
        <meta property="og:description" content="写在前面 &nbsp; 最近被Hyperledger Fabric折磨，归根结底还是因为自己太菜了qwq。学习路漫漫，笔记不能少。下面的步骤均是基于已经成功搭建了Fabric2.2环境，并且拉取fab" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Hyperledger Fabric 2.2 学习笔记：测试网络test-network">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">

    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/meanmenu.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/boxicons.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/magnific-popup.min.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/animate.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/style.css">
    <link rel="stylesheet" href="/assets/website/css/bifrostvnode/responsive.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-EBSBDJ3LPE"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-EBSBDJ3LPE');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="loader">
        <div class="d-table">
            <div class="d-table-cell">
                <div class="spinner">
                    <div class="bounce1"></div>
                    <div class="bounce2"></div>
                    <div class="bounce3"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="navbar-area fixed-top">
        <div class="mobile-nav">
            <a href="/" class="logo">
                Bifrostv Node
            </a>
        </div>
        <div class="main-nav">
            <div class="container">
                <nav class="navbar navbar-expand-md navbar-light">
                                        <a class="navbar-brand" href="/">
                        <span>BifrosTV Node</span>
                    </a>
                                        <div class="collapse navbar-collapse mean-menu" id="navbarSupportedContent">
                        <ul class="navbar-nav ml-auto">
                                                        <li class="nav-item">
                                <a href="/" class="nav-link">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a href="/free-nodes/" class="nav-link">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a href="/paid-subscribe/" class="nav-link">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a href="/client.htm" class="nav-link">客户端</a>
                            </li>
                                                        <li class="nav-item">
                                <a href="/news/" class="nav-link">新闻资讯</a>
                            </li>
                                                    </ul>
                    </div>
                </nav>
            </div>
        </div>
    </div>
    <div class="page-title-area">
        <img src="/assets/website/img/bifrostvnode/footer-car.png" alt="Title">
        <div class="container">
            <div class="page-title-content">
                <h1>Hyperledger Fabric 2.2 学习笔记：测试网络test-network</h1>
                <ul>
                    <li>
                        <a href="/">首页</a>
                    </li>
                    <li>
                        <i class='bx bx-chevron-right'></i>
                    </li>
                    <li>
                        <a href="/news/">新闻资讯</a>
                    </li>
                    <li>
                        <i class='bx bx-chevron-right'></i>
                    </li>
                    <li>正文</li>
                </ul>
            </div>
        </div>
    </div>
    <section class="process-area pt-100 pb-70">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<h2><span style="font-family: 宋体, &quot;Songti SC&quot;">写在前面</span></h2> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 最近被Hyperledger Fabric折磨，归根结底还是因为自己太菜了qwq。学习路漫漫，笔记不能少。下面的步骤均是基于已经成功搭建了Fabric2.2环境，并且拉取fabric-samples文件夹了。</span></p> <h2><span style="font-family: 宋体, &quot;Songti SC&quot;">一、启动测试网络</span></h2> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 打开终端进入test-network目录下。我的具体目录是：&nbsp;/workspace/fabric-samples/test-network，因此有命令：</span></p> <div class="cnblogs_code"> <pre>cd /workspace/fabric-samples/test-network</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 在使用./network.sh命令前，可以先查看选项说明。</span></p> <div class="cnblogs_code"> <pre>./network.sh -h</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 要是不想看问题也不大，跟着我走就好。(๑＞ڡ＜)☆</span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 下面正式开始！</span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 首先启动网络。注意下面这个命令只是启动网络并没有创建通道。</span></p> <div class="cnblogs_code"> <pre>./network.sh up</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 启动网络后，接着创建通道。由于这里并没有指定通道的名字，此时默认为mychannel.</span></p> <div class="cnblogs_code"> <pre>./network.sh createChannel</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 其实上述两步可以用一条命令实现，那就是：</span></p> <div class="cnblogs_code"> <pre>./network.sh up createChannel</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 之后，将bin目录中二进制文件添加到 CLI 路径。</span></p> <div class="cnblogs_code"> <pre>export PATH=${PWD}/../bin:$PATH</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 设置FABRIC_CFG_PATH为指向fabric-samples中的core.yaml文件。</span></p> <div class="cnblogs_code"> <pre>export FABRIC_CFG_PATH=$PWD/../config/</pre> </div> <h2><span style="font-family: 宋体, &quot;Songti SC&quot;">二、安装链码</span></h2> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 根据官方文档可以知道，Fabric链码生命周期需要组织同意定义一个链码的参数，比如说名称、版本以及链码背书策略。通道成员通过<span style="color: rgba(255, 0, 0, 1)">以下四步</span>达成共识。不是通道上的每一个组织都需要完成每一步。</span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 1.<span style="background-color: rgba(255, 255, 0, 1)">打包链码。</span>这一步可以被一个或者每一个组织完成。</span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 2.<span style="background-color: rgba(255, 255, 0, 1)">安装链码在你的peer节点上。</span>每一个用链码的组织都需要完成。</span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 3.<span style="background-color: rgba(255, 255, 0, 1)">为你的组织批准链码定义。</span>使用链码的每一个组织都需要完成这一步。链码能够在通道上运行之前，链码定义需要被足够多的组织批准来满足通道的生命周期背书(LifecycleEndorsement)策略（默认为大多数组织）。</span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 4.<span style="background-color: rgba(255, 255, 0, 1)">提交链码定义到链上。</span>一旦通道所需数量的组织已经同意，提交交易需要被提交。提交者首先从已同意组织中的足够的peer节点中收集背书，然后通过提交链码声明。</span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 显然，下面要进行的第一步是打包链码。链码需要被打包成一个tar文件。</span></p> <h3><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 1.打包链码</span></h3> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 下面使用peer lifecycle chaincode package命令创建链码包</span></p> <div class="cnblogs_code"> <pre>peer lifecycle chaincode package fabcar.tar.gz --path ../chaincode/fabcar/go/ --lang golang --label fabcar_1</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 说明：① 命令中--path指的是 将指定目录（../chaincode/fabcar/go/）的源码打包成fabcar.tar.gz.</span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; &nbsp; &nbsp; ② --label 后面是标签，当日后链码包升级的时候，可以设置不同的标签。</span></p> <h3><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 2.安装链码</span></h3> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 此时网络有两个组织，所以需要先后在Org1、Org2的peer节点上安装链码。</span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; （1）</span><span style="font-family: 宋体, &quot;Songti SC&quot;">Org1 peer节点安装链码</span></p> <div class="cnblogs_code"> <pre>export CORE_PEER_TLS_ENABLED=<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)"> export CORE_PEER_LOCALMSPID</span>=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Org1MSP</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> export CORE_PEER_TLS_ROOTCERT_FILE</span>=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/<span style="color: rgba(0, 0, 0, 1)">ca.crt export CORE_PEER_MSPCONFIGPATH</span>=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/<span style="color: rgba(0, 0, 0, 1)">msp export CORE_PEER_ADDRESS</span>=localhost:<span style="color: rgba(128, 0, 128, 1)">7051</span><span style="color: rgba(0, 0, 0, 1)"> peer lifecycle chaincode install fabcar.tar.gz</span></pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 当看到status:200即为成功。具体成功返回如下：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 128, 1)">2022</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">20</span><span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">03</span>:<span style="color: rgba(128, 0, 128, 1)">14.293</span> CST [cli.lifecycle.chaincode] submitInstallProposal -&gt; INFO<span style="color: rgba(128, 0, 128, 1)">001</span> Installed remotely: response:&lt;status:<span style="color: rgba(128, 0, 128, 1)">200</span> payload:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">\nIfabcar_1:762e0fe3dbeee0f7b08fb6200adeb4a3a20f649a00f168c0b3c2257e53b6e506\022\010fabcar_1</span><span style="color: rgba(128, 0, 0, 1)">"</span> &gt;<span style="color: rgba(128, 0, 128, 1)">2022</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">20</span><span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">03</span>:<span style="color: rgba(128, 0, 128, 1)">14.294</span> CST [cli.lifecycle.chaincode] submitInstallProposal -&gt; INFO<span style="color: rgba(128, 0, 128, 1)">002</span> Chaincode code package identifier: fabcar_1:762e0fe3dbeee0f7b08fb6200adeb4a3a20f649a00f168c0b3c2257e53b6e506</pre> </div> <p><span style="font-family: &quot;Microsoft YaHei&quot;"><span style="font-family: 宋体, &quot;Songti SC&quot;"> 但过程总是曲折的，显然我没有那么顺利成功。在安转链码的时候，我得到如下返回：</span></span></p> <div class="cnblogs_code"> <pre>Error: chaincode install failed with status:<span style="color: rgba(128, 0, 128, 1)">500</span> - failed to invoke backing implementation of<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">InstallChaincode</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">: could not build chaincode: docker build failed: docker image build failed: docker build failed: Error returned</span><span style="color: rgba(0, 0, 255, 1)">from</span> build:<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">go: github.com/hyperledger/fabric-contract-api-go@v1.1.0: Get</span><span style="color: rgba(128, 0, 0, 1)">"</span>https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">proxy.golang.org/github.com/hyperledger</span> /fabric-contract-api-go/@v/v1.<span style="color: rgba(128, 0, 128, 1)">1.0</span>.mod<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">: dial tcp: lookup proxy.golang.org on 172.20.10.1:53: read udp 172.17.0.2:53395</span> -&gt;<span style="color: rgba(128, 0, 128, 1)">172.20</span>.<span style="color: rgba(128, 0, 128, 1)">10.1</span>:<span style="color: rgba(128, 0, 128, 1)">53</span>: i/o timeout “</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;; background-color: rgba(255, 255, 0, 1)"><span style="background-color: rgba(255, 255, 255, 1)"></span> 解决方案如下：</span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 到../chaincode/fabcar/go/目录下打开终端执行命令。</span></p> <div class="cnblogs_code"> <pre>go env -w GOPROXY=https:<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">goproxy.io,direct</span> go env -w GO111MODULE=<span style="color: rgba(0, 0, 0, 1)">on go mod vendor</span></pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 之后重新执行peer lifecycle chaincode install fabcar.tar.gz即可成功。</span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; （2）Org2 peer节点安装链码</span></p> <div class="cnblogs_code"> <pre>export CORE_PEER_LOCALMSPID=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Org2MSP</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> export CORE_PEER_TLS_ROOTCERT_FILE</span>=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/<span style="color: rgba(0, 0, 0, 1)">ca.crt export CORE_PEER_MSPCONFIGPATH</span>=${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/<span style="color: rgba(0, 0, 0, 1)">msp export CORE_PEER_ADDRESS</span>=localhost:<span style="color: rgba(128, 0, 128, 1)">9051</span><span style="color: rgba(0, 0, 0, 1)"> peer lifecycle chaincode install fabcar.tar.gz</span></pre> </div> <h3><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 3.批准链码定义</span></h3> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 下面需要把链码发布到通道上去。首先<span style="color: rgba(255, 0, 0, 1)">查询链码包ID</span></span></p> <div class="cnblogs_code"> <pre>peer lifecycle chaincode queryinstalled</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 得到返回如下：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">Installed chaincodes on peer: Package ID: fabcar_1:762e0fe3dbeee0f7b08fb6200adeb4a3a20f649a00f168c0b3c2257e53b6e506, Label: fabcar_1</span></pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 因此我的包ID为：</span></p> <p style="text-align: center"><span style="font-family: 宋体, &quot;Songti SC&quot;">fabcar_1:762e0fe3dbeee0f7b08fb6200adeb4a3a20f649a00f168c0b3c2257e53b6e506.</span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 通过链码时，我们将使用包ID，因此，将包ID保存为环境变量。将返回的包ID粘贴到下面的命令中。</span></p> <div class="cnblogs_code"> <pre>export CC_PACKAGE_ID=</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 在这里就是：</span></p> <div class="cnblogs_code"> <pre>export CC_PACKAGE_ID=fabcar_1:762e0fe3dbeee0f7b08fb6200adeb4a3a20f649a00f168c0b3c2257e53b6e506</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 之后，Org2通过链码定义</span></p> <div class="cnblogs_code"> <pre>peer lifecycle chaincode approveformyorg -o localhost:<span style="color: rgba(128, 0, 128, 1)">7050</span> --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name fabcar --version<span style="color: rgba(128, 0, 128, 1)">1.0</span> --package-id $CC_PACKAGE_ID --sequence<span style="color: rgba(128, 0, 128, 1)">1</span> --tls --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --waitForEvent</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 返回如下即为成功。</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 128, 1)">2022</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">20</span><span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">20</span>:<span style="color: rgba(128, 0, 128, 1)">59.307</span> CST [chaincodeCmd] ClientWait -&gt; INFO<span style="color: rgba(128, 0, 128, 1)">001</span> txid [f688ddff60056af56e96784d253695e9fbb056e5244058fb30b2d05977214c1c] committed with status (VALID) at localhost:<span style="color: rgba(128, 0, 128, 1)">9051</span></pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 设置以下环境变量以Org1管理员身份运行：</span><br /><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; Org1通过链码定义</span></p> <div class="cnblogs_code"> <pre>export CORE_PEER_LOCALMSPID=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Org1MSP</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> export CORE_PEER_MSPCONFIGPATH</span>=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/<span style="color: rgba(0, 0, 0, 1)">msp export CORE_PEER_TLS_ROOTCERT_FILE</span>=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/<span style="color: rgba(0, 0, 0, 1)">ca.crt export CORE_PEER_ADDRESS</span>=localhost:<span style="color: rgba(128, 0, 128, 1)">7051</span><span style="color: rgba(0, 0, 0, 1)"> peer lifecycle chaincode approveformyorg</span>-o localhost:<span style="color: rgba(128, 0, 128, 1)">7050</span> --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name fabcar --version<span style="color: rgba(128, 0, 128, 1)">1.0</span> --package-id $CC_PACKAGE_ID --sequence<span style="color: rgba(128, 0, 128, 1)">1</span> --tls --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --waitForEvent</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 返回：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 128, 1)">2022</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">20</span><span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">25</span>:<span style="color: rgba(128, 0, 128, 1)">23.828</span> CST [chaincodeCmd] ClientWait -&gt; INFO<span style="color: rgba(128, 0, 128, 1)">001</span> txid [9178a978646d4b010a61677488532af88b7393ba898341168fc627c0953a9884] committed with status (VALID) at localhost:<span style="color: rgba(128, 0, 128, 1)">7051</span></pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 使用 peer lifecycle chaincode checkcommitreadiness 命令来检查通道成员是否已批准相同的链码定义：</span></p> <div class="cnblogs_code"> <pre>peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name fabcar --version<span style="color: rgba(128, 0, 128, 1)">1.0</span> --sequence<span style="color: rgba(128, 0, 128, 1)">1</span> --tls --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --output json</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 返回：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">{</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">approvals</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Org1MSP</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">,</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Org2MSP</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">     } }</span></pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 返回的结果说明这两个节点批准了这个链码的定义。</span></p> <h3><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 4.将链码提交到通道</span></h3> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 使用 peer lifecycle chaincode commit 命令将链码定义提交到通道。commit命令还需要由组织管理员提交。</span></p> <div class="cnblogs_code"> <pre>peer lifecycle chaincode commit -o localhost:<span style="color: rgba(128, 0, 128, 1)">7050</span> --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name fabcar --version<span style="color: rgba(128, 0, 128, 1)">1.0</span> --sequence<span style="color: rgba(128, 0, 128, 1)">1</span> --tls --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --peerAddresses localhost:<span style="color: rgba(128, 0, 128, 1)">7051</span> --tlsRootCertFiles ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:<span style="color: rgba(128, 0, 128, 1)">9051</span> --tlsRootCertFiles ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 返回：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 128, 1)">2022</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">20</span><span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">45</span>:<span style="color: rgba(128, 0, 128, 1)">05.973</span> CST [chaincodeCmd] ClientWait -&gt; INFO<span style="color: rgba(128, 0, 128, 1)">001</span> txid [c93e2e79e2da09f04654d30630959d9e80d2576aefdf4be16e3b281d48a011a4] committed with status (VALID) at localhost:<span style="color: rgba(128, 0, 128, 1)">7051</span><span style="color: rgba(128, 0, 128, 1)">2022</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">20</span><span style="color: rgba(128, 0, 128, 1)">10</span>:<span style="color: rgba(128, 0, 128, 1)">45</span>:<span style="color: rgba(128, 0, 128, 1)">06.019</span> CST [chaincodeCmd] ClientWait -&gt; INFO<span style="color: rgba(128, 0, 128, 1)">002</span> txid [c93e2e79e2da09f04654d30630959d9e80d2576aefdf4be16e3b281d48a011a4] committed with status (VALID) at localhost:<span style="color: rgba(128, 0, 128, 1)">9051</span></pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 使用 peer lifecycle chaincode querycommitted 命令来确认链码定义已经提交给通道。</span></p> <div class="cnblogs_code"> <pre>peer lifecycle chaincode querycommitted --channelID mychannel --name fabcar --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 返回：</span></p> <div class="cnblogs_code"> <pre>Committed chaincode definition<span style="color: rgba(0, 0, 255, 1)">for</span> chaincode<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">fabcar</span><span style="color: rgba(128, 0, 0, 1)">'</span> on channel<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">mychannel</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">: Version:</span><span style="color: rgba(128, 0, 128, 1)">1.0</span>, Sequence:<span style="color: rgba(128, 0, 128, 1)">1</span>, Endorsement Plugin: escc, Validation Plugin: vscc, Approvals: [Org1MSP:<span style="color: rgba(0, 0, 255, 1)">true</span>, Org2MSP:<span style="color: rgba(0, 0, 255, 1)">true</span>]</pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 看到此返回信息后可以知道我们提交的链码已经提交到通道myChannel中。</span></p> <h2><span style="font-family: 宋体, &quot;Songti SC&quot;">三、调用链码</span></h2> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; ① 调用链码</span></p> <div class="cnblogs_code"> <pre>peer chaincode invoke -o localhost:<span style="color: rgba(128, 0, 128, 1)">7050</span> --ordererTLSHostnameOverride orderer.example.com --tls --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n fabcar  --peerAddresses localhost:<span style="color: rgba(128, 0, 128, 1)">7051</span> --tlsRootCertFiles ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:<span style="color: rgba(128, 0, 128, 1)">9051</span> --tlsRootCertFiles ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">{"function":"initLedger","Args":[]}</span><span style="color: rgba(128, 0, 0, 1)">'</span></pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 返回如下即为成功。</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 128, 1)">2022</span>-<span style="color: rgba(128, 0, 128, 1)">04</span>-<span style="color: rgba(128, 0, 128, 1)">20</span><span style="color: rgba(128, 0, 128, 1)">15</span>:<span style="color: rgba(128, 0, 128, 1)">49</span>:<span style="color: rgba(128, 0, 128, 1)">24.590</span> CST [chaincodeCmd] chaincodeInvokeOrQuery -&gt; INFO<span style="color: rgba(128, 0, 128, 1)">001</span> Chaincode invoke successful. result: status:<span style="color: rgba(128, 0, 128, 1)">200</span></pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 显然，我并没有一下就成功。我得到如下返回：</span></p> <div class="cnblogs_code"> <pre>Error: endorsement failure during invoke. response: status:<span style="color: rgba(128, 0, 128, 1)">500</span> message:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">error in simulation:</span><span style="color: rgba(0, 0, 0, 1)">failed to execute transaction 5e72e85cea510ecc198412f2f7df406b8fbcff8adf97d052d6b165413ed85854: could not launch chaincode fabcar_1:762e0fe3dbeee0f7b08fb6200adeb4a3a20f649a00f168c0b3c2257e53b6e506:error starting container: error starting container: API error (</span><span style="color: rgba(128, 0, 128, 1)">404</span>): network _test not found<span style="color: rgba(128, 0, 0, 1)">"</span></pre> </div> <p><span style="font-family: 宋体, &quot;Songti SC&quot;"><span style="background-color: rgba(255, 255, 0, 1)">错误原因：</span></span></p> <p style="text-align: left"><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; fabric-samples/test-network/docker/docker-compose-test-net.yaml的配置文件中有一个</span></p> <p style="text-align: left"><span style="font-family: 宋体, &quot;Songti SC&quot;">- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=<span style="color: rgba(255, 0, 0, 1)">${COMPOSE_PROJECT_NAME}</span>_test</span></p> <p style="text-align: left"><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; ${COMPOSE_PROJECT_NAME}在智能合约启动时，此值获取到的会是空值，从而导致标题的错误提示。这个也被官方收录进issue中，并在fabric-samples的main分支中已经改为固定值，如下：</span></p> <p style="text-align: left"><span style="font-family: 宋体, &quot;Songti SC&quot;">- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=<span style="color: rgba(255, 0, 0, 1)">fabric</span>_test</span></p> <p style="text-align: left"> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 需要注意的是使用docker-compse启动时，创建的network名字会在前边加上当前docker-compse文件的目录名字。所以如果我们在使用老版本的fabric-sample时，自己可修改${COMPOSE_PROJECT_NAME}值为当前你存放compose文件的文件夹名称。</span><br /><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 查看创建的docker network可以使用docker network ls查看。</span><br /><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 此时查看到名字是：docker_test</span><br /><span style="font-family: 宋体, &quot;Songti SC&quot;">因此将文件中的</span><br /><span style="font-family: 宋体, &quot;Songti SC&quot;">- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=<span style="color: rgba(255, 0, 0, 1)">${COMPOSE_PROJECT_NAME}</span>_test</span><br /><span style="font-family: 宋体, &quot;Songti SC&quot;">改为</span><br /><span style="font-family: 宋体, &quot;Songti SC&quot;">- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=<span style="color: rgba(255, 0, 0, 1)">docker</span>_test</span><br /><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 注意文件有<span style="color: rgba(255, 0, 0, 1); background-color: rgba(255, 255, 0, 1)">两处</span>需要改。</span></p> <p style="text-align: left"> <p style="text-align: left"> <p style="text-align: left"><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; ②调用链码</span></p> <div class="cnblogs_code"> <pre>peer chaincode query --channelID mychannel --name fabcar -c<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">{"Args":["queryAllCars"]}</span><span style="color: rgba(128, 0, 0, 1)">'</span></pre> </div> <p style="text-align: left"> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 得到返回：</span></p> <div class="cnblogs_code"> <pre>[{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Key</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CAR0</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Record</span><span style="color: rgba(128, 0, 0, 1)">"</span>:{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">make</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Toyota</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">model</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Prius</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">colour</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">blue</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">owner</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Tomoko</span><span style="color: rgba(128, 0, 0, 1)">"</span>}},{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Key</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CAR1</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Record</span><span style="color: rgba(128, 0, 0, 1)">"</span>:{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">make</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Ford</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">model</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Mustang</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">colour</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">red</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">owner</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Brad</span><span style="color: rgba(128, 0, 0, 1)">"</span>}},{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Key</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CAR10</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Record</span><span style="color: rgba(128, 0, 0, 1)">"</span>:{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">make</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">VW</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">model</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Polo</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">colour</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Grey</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">owner</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Archie</span><span style="color: rgba(128, 0, 0, 1)">"</span>}},{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Key</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CAR2</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Record</span><span style="color: rgba(128, 0, 0, 1)">"</span>:{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">make</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Hyundai</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">model</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Tucson</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">colour</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">green</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">owner</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Jin Soo</span><span style="color: rgba(128, 0, 0, 1)">"</span>}},{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Key</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CAR3</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Record</span><span style="color: rgba(128, 0, 0, 1)">"</span>:{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">make</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Volkswagen</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">model</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Passat</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">colour</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">yellow</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">owner</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Max</span><span style="color: rgba(128, 0, 0, 1)">"</span>}},{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Key</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CAR4</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Record</span><span style="color: rgba(128, 0, 0, 1)">"</span>:{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">make</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Tesla</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">model</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">S</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">colour</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">black</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">owner</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Adriana</span><span style="color: rgba(128, 0, 0, 1)">"</span>}},{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Key</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CAR5</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Record</span><span style="color: rgba(128, 0, 0, 1)">"</span>:{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">make</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Peugeot</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">model</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">205</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">colour</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">purple</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">owner</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Michel</span><span style="color: rgba(128, 0, 0, 1)">"</span>}},{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Key</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CAR6</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Record</span><span style="color: rgba(128, 0, 0, 1)">"</span>:{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">make</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Chery</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">model</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">S22L</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">colour</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">white</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">owner</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Aarav</span><span style="color: rgba(128, 0, 0, 1)">"</span>}},{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Key</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CAR7</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Record</span><span style="color: rgba(128, 0, 0, 1)">"</span>:{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">make</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Fiat</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">model</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Punto</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">colour</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">violet</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">owner</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Pari</span><span style="color: rgba(128, 0, 0, 1)">"</span>}},{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Key</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CAR8</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Record</span><span style="color: rgba(128, 0, 0, 1)">"</span>:{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">make</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Tata</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">model</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Nano</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">colour</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">indigo</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">owner</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Valeria</span><span style="color: rgba(128, 0, 0, 1)">"</span>}},{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Key</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CAR9</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Record</span><span style="color: rgba(128, 0, 0, 1)">"</span>:{<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">make</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Holden</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">model</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Barina</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">colour</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">brown</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">owner</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Shotaro</span><span style="color: rgba(128, 0, 0, 1)">"</span>}}]</pre> </div> <p style="text-align: left"> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">&nbsp; 到这测试网络也就跑通了。(๑╹◡╹)ﾉ"""</span></p> <p style="text-align: left"> <p style="text-align: left"> <h2 style="text-align: left"><span style="font-family: 宋体, &quot;Songti SC&quot;">参考</span></h2> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">[1]</span><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/zhanglingge/article/details/106528573?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;utm_relevant_index=2"  target="_blank" rel="nofollow"><span style="font-family: 宋体, &quot;Songti SC&quot;">Hyperledger Fabric2中文文档-链码部署</span></a></p> <p style="text-align: left"><span style="font-family: 宋体, &quot;Songti SC&quot;">[2]</span><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://hmbiao.blog.csdn.net/article/details/117850567?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7EPayColumn-1.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7EPayColumn-1.pc_relevant_default&amp;utm_relevant_index=1"  target="_blank" rel="nofollow"><span style="font-family: 宋体, &quot;Songti SC&quot;">Error starting container: API error (404): {“message“:“network _byfn not found“}</span></a></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">[3]</span><span style="font-family: 宋体, &quot;Songti SC&quot;"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/weixin_43824526/article/details/121173626"  target="_blank" rel="nofollow">error starting container: API error (404): network fabric_test not found“</a></span></p> <p><span style="font-family: 宋体, &quot;Songti SC&quot;">[4]</span><span style="font-family: 宋体, &quot;Songti SC&quot;"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.bilibili.com/video/BV1ZR4y1M7yH?spm_id_from=333.337.search-card.all.click"  target="_blank" rel="nofollow"><span class="tit">hyperledger-fabric【1】运行测试网络</span></a></span></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-97835.htm">Python并发编程之多进程</a></p>
                                        <p>下一个：<a href="/news/article-98499.htm">宠物粮业务员好干吗工资多少一个月（宠物粮食业务员）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-69596.htm" title="附近宠物猫回收电话（宠物回收平台）">附近宠物猫回收电话（宠物回收平台）</a></li>
                        <li class="py-2"><a href="/news/article-88858.htm" title="Nginx离线安装方法详解">Nginx离线安装方法详解</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-28-free-high-speed-nodes.htm" title="3月28日→21.3M/S|2025年最新免费节点Bifrostv Node订阅链接地址">3月28日→21.3M/S|2025年最新免费节点Bifrostv Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-21-free-node-subscribe-links.htm" title="3月21日→22.7M/S|2025年最新免费节点Bifrostv Node订阅链接地址">3月21日→22.7M/S|2025年最新免费节点Bifrostv Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-93359.htm" title="PHP命名空间概述">PHP命名空间概述</a></li>
                        <li class="py-2"><a href="/news/article-81717.htm" title="如何解决sass-loader和node-sass版本冲突的问题_vue.js_">如何解决sass-loader和node-sass版本冲突的问题_vue.js_</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-15-node-share.htm" title="4月15日→20.7M/S|2025年最新免费节点Bifrostv Node订阅链接地址">4月15日→20.7M/S|2025年最新免费节点Bifrostv Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-13-free-node-subscribe-links.htm" title="3月13日→18.7M/S|2025年最新免费节点Bifrostv Node订阅链接地址">3月13日→18.7M/S|2025年最新免费节点Bifrostv Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-91398.htm" title="宠物领养协议是什么法律（宠物领养协议简单版本）">宠物领养协议是什么法律（宠物领养协议简单版本）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-8-free-high-speed-nodes.htm" title="4月8日→19.6M/S|2025年最新免费节点Bifrostv Node订阅链接地址">4月8日→19.6M/S|2025年最新免费节点Bifrostv Node订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">53</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer>
        <div class="container">
            <div class="copyright-area">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="copyright-item text-center">
                                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <a href="/">Bifrostv Node机场节点订阅官网</a> 版权所有
                            <br />
                            Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <script data-cfasync="false" src="/assets/website/js/frontend/bifrostvnode/email-decode.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/popper.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery.meanmenu.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery.mixitup.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/jquery.ajaxchimp.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/form-validator.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/contact-form-script.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/wow.min.js"></script>
    <script src="/assets/website/js/frontend/bifrostvnode/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>